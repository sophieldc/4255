apiVersion: apps/v1
kind: StatefulSet # StatefulSet à la place de Deployment
metadata:
  name: mongodb
  namespace: sledrich
spec:
  serviceName: mongodb # Nom du service qui expose la bdd
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0.20-rc3-jammy
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            cpu: "100m"
            memory: "200Mi"
          limits:
            cpu: "200m"
            memory: "400Mi"
        livenessProbe:              #la database MongoDB encapsulé couche 4 
          tcpSocket:               # probe TCP car MongoDB écoute sur le port 27017 => on vérifie l'ouverture du port avec tcpSocket
            port: 27017
          initialDelaySeconds: 120  # Attendre 60s avant la première vérification
          periodSeconds: 240        # Vérifier toutes les 120s
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 300Mi    #Use a Persistant Volume to store the database content, Stockage ressource : 0.1 Go
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: sledrich
spec:
  selector:
    app: mongodb
  clusterIP: None
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017



